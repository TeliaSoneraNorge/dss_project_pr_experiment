name: Validate project quality

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: "Install dependencies"
      run: |
          python -m pip install PyGithub
          # set -xe
          # python -VV
          # python -m site
          # python -m pip install --upgrade pip setuptools wheel
          # python -m pip install --upgrade coverage[toml] virtualenv tox tox-gh-actions
#    - name: Install hub cli
#      uses: geertvdc/setup-hub@master
    - name: Install dataiku keys
      env:
        DATAIKU_READONLY_DEPLOY_KEY: ${{ secrets.dataiku_readonly_deploy_key }}
      run: |
        mkdir dep_keys
        echo "$DATAIKU_READONLY_DEPLOY_KEY" > ~/dep_keys/dataiku_rsa
        chmod 600 ~/dep_keys/dataiku_rsa
        ls -l ~/dep_keys/dataiku_rsa
    - name: Install dataiku repo
      run: |
        # Replace branch with master when working
        ssh-agent bash -c 'ssh-add ~/dep_keys/dataiku_rsa ; git clone --single-branch --branch validate-pr-quality git@github.com:TeliaSoneraNorge/dataiku.git'
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
    - name: Dump job context
      env:
        JOB_CONTEXT: ${{ toJson(job) }}
      run: echo "$JOB_CONTEXT"
    - name: Dump steps context
      env:
        STEPS_CONTEXT: ${{ toJson(steps) }}
      run: echo "$STEPS_CONTEXT"
    - name: Dump runner context
      env:
        RUNNER_CONTEXT: ${{ toJson(runner) }}
      run: echo "$RUNNER_CONTEXT"
    - name: Dump strategy context
      env:
        STRATEGY_CONTEXT: ${{ toJson(strategy) }}
      run: echo "$STRATEGY_CONTEXT"
    - name: Dump matrix context
      env:
        MATRIX_CONTEXT: ${{ toJson(matrix) }}
      run: echo "$MATRIX_CONTEXT"
    - name: PWD
      run: pwd
    - name: LS
      run: ls -la
    - name: Validate PQ body
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PR_BODY: ${{ github.event.pull_request.body }}
      run: |
        python ~/dataiku/util/validate-pr-quality.py "$GITHUB_TOKEN" "$PR_BODY"

